DESCRIPTION
"Elowitz2000 - Repressilator"" (BIOMD0000000012)"
"SBML level 2 version 3"
"<notes>
  <body xmlns="http://www.w3.org/1999/xhtml">
    <div class="dc:title">Elowitz2000 - Repressilator</div>
    <div class="dc:description">
      <p>This model describes the deterministic version of the repressilator system.</p>
      <p>The authors of this model (see reference) use three transcriptional repressor systems that are not part of any natural biological clock to build an oscillating network that they called the repressilator. The model system was induced in Escherichia coli.</p>
      <p>In this system, LacI (variable X is the mRNA, variable PX is the protein) inhibits the tetracycline-resistance transposon tetR (Y, PY describe mRNA and protein). Protein tetR inhibits the gene Cl from phage Lambda (Z, PZ: mRNA, protein),and protein Cl inhibits lacI expression. With the appropriate parameter values this system oscillates.</p>
    </div>
    <div class="dc:bibliographicCitation">
      <p>This model is described in the article:</p>
      <div class="bibo:title">
        <a href="http://identifiers.org/pubmed/10659856" title="Access to this publication">A synthetic oscillatory network of transcriptional regulators.</a>
      </div>
      <div class="bibo:authorList">Elowitz MB, Leibler S.</div>
      <div class="bibo:Journal">Nature. 2000 Jan; 403(6767):335-338</div>
      <p>Abstract:</p>
      <div class="bibo:abstract">
        <p>Networks of interacting biomolecules carry out many essential functions in living cells, but the &apos;design principles&apos; underlying the functioning of such intracellular networks remain poorly understood, despite intensive efforts including quantitative analysis of relatively simple systems. Here we present a complementary approach to this problem: the design and construction of a synthetic network to implement a particular function. We used three transcriptional repressor systems that are not part of any natural biological clock to build an oscillating network, termed the repressilator, in Escherichia coli. The network periodically induces the synthesis of green fluorescent protein as a readout of its state in individual cells. The resulting oscillations, with typical periods of hours, are slower than the cell-division cycle, so the state of the oscillator has to be transmitted from generation to generation. This artificial clock displays noisy behaviour, possibly because of stochastic fluctuations of its components. Such &apos;rational network design may lead both to the engineering of new cellular behaviours and to an improved understanding of naturally occurring networks.</p>
      </div>
    </div>
    <div class="bm:curation">
      <p>The model is based upon the equations in Box 1 of the paper; however, these equations as printed are dimensionless, and the correct dimensions have been returned to the equations, and the parameters set to reproduce Figure 1C (left).</p>
    </div>
    <div class="bm:modification">
      <p>The original model was generated by B.E. Shapiro using Cellerator version 1.0 update 2.1127 using Mathematica 4.2 for Mac OS X (June 4, 2002), November 27, 2002 12:15:32, using (PowerMac,PowerPC, Mac OS X,MacOSX,Darwin).</p>
      <p>Nicolas Le Novere provided a corrected version generated by SBMLeditor on Sun Aug 20 00:44:05 BST 2006. This removed the EmptySet species. Ran fine on COPASI 4.0 build 18.</p>
      <p>Bruce Shapiro revised the model with SBMLeditor on 23 October 2006 20:39 PST. This defines default units and correct reactions. The original Cellerator reactions while being mathematically correct did not accurately reflect the intent of the authors. The original notes were mostly removed because they were mostly incorrect in the revised version. Tested with MathSBML 2.6.0.</p>
      <p>Nicolas Le Novere changed the volume to 1 cubic micrometre, to allow for stochastic simulation.</p>
      <p>Changed by Lukas Endler to use the average livetime of mRNA instead of its halflife and a corrected value of alpha and alpha0.</p>
      <p>Moreover, the equations used in this model were clarified, cf. below.</p>
      <p>The equations given in        <b>box 1</b>
            of the original publication are rescaled in three respects (lowercase letters denote the rescaled, uppercase letters the unscaled number of molecules per cell):        </p>
    <ul>
      <li>the time is rescaled to the average mRNA lifetime,          <em>t_ave: τ = t/t_ave</em>
  </li>
  <li>the mRNA concentration is rescaled to the translation efficiency          <em>eff: m = M/eff</em>
</li><li>the protein concentration is rescaled to          <em>Km: p = P/Km</em>
</li>
</ul><p>
  <em>α</em>
            in the equations should be in units of rescaled proteins per promotor and cell, and        <em>β</em>
            is the ratio of the protein to the mRNA decay rates or the ratio of the mRNA to the protein halflife.        </p><p>In this version of the model        <em>α</em>
            and        <em>β</em>
            are calculated correspondingly to the article, while        <em>p</em>
            and        <em>m</em>
            where just replaced by        <em>P/Km</em>
            resp.        <em>M/eff</em>
            and all equations multiplied by        <em>1/t_ave</em>
            . Also, to make the equations easier to read, commonly used variables derived from the parameters given in the article by simple rules were introduced.        </p><p>The parameters given in the article were:</p><table>
  <tr>
    <td>promotor strength (repressed) (            <em>tps_repr</em>
                ):            </td>
  <td>5*10            <sup>-4</sup>
</td><td>transcripts/(promotor*s)</td>
</tr><tr>
  <td>promotor strength (full) (            <em>tps_active</em>
                ):            </td><td>0.5</td><td>transcripts/(promotor*s)</td>
</tr><tr>
  <td>mRNA half life, τ            <sub>1/2,mRNA</sub>
                :            </td><td>2</td><td>min</td>
</tr><tr>
  <td>protein half life, τ            <sub>1/2,prot</sub>
                :            </td><td>10</td><td>min</td>
</tr><tr>
  <td>K            <sub>M</sub>
                :            </td><td>40</td><td>monomers/cell</td>
</tr><tr>
  <td>Hill coefficient n:</td>
  <td>2</td>
  <td/>
</tr>
</table><p>From these the following constants can be derived:</p><table>
  <tr>
    <td>average mRNA lifetime (            <em>t_ave</em>
                ):            </td>
  <td>
    <em>τ              <sub>1/2,mRNA</sub>
                  /ln(2)              </em>
</td><td>= 2.89 min</td>
</tr><tr>
  <td>mRNA decay rate (            <em>kd_mRNA</em>
                ):            </td><td>
  <em>ln(2)/ τ              <sub>1/2,mRNA</sub>
</em>
</td><td>= 0.347 min            <sup>-1</sup>
</td>
</tr><tr>
  <td>protein decay rate (            <em>kd_prot</em>
                ):            </td><td>
  <em>ln(2)/ τ              <sub>1/2,prot</sub>
</em>
</td>
</tr><tr>
  <td>transcription rate (            <em>a_tr</em>
                ):            </td><td>
  <em>tps_active*60</em>
</td><td>= 29.97 transcripts/min</td>
</tr><tr>
  <td>transcription rate (repressed) (            <em>a0_tr</em>
                ):            </td><td>
  <em>tps_repr*60</em>
</td><td>= 0.03 transcripts/min</td>
</tr><tr>
  <td>translation rate (            <em>k_tl</em>
                ):            </td><td>
  <em>eff*kd_mRNA</em>
</td><td>= 6.93 proteins/(mRNA*min)</td>
</tr><tr>
  <td>α :</td>
  <td>
    <em>a_tr*eff*τ              <sub>1/2,prot</sub>
                  /(ln(2)*K              <sub>M</sub>
                  )              </em>
</td><td>= 216.4 proteins/(promotor*cell*Km)</td>
</tr><tr>
  <td>α            <sub>0</sub>
                :            </td><td>
  <em>a0_tr*eff*τ              <sub>1/2,prot</sub>
                  /(ln(2)*K              <sub>M</sub>
                  )              </em>
</td><td>= 0.2164 proteins/(promotor*cell*Km)</td>
</tr><tr>
  <td>β :</td>
  <td>
    <em>k_dp/k_dm</em>
  </td>
  <td>= 0.2</td>
</tr>
</table><br/><p>Annotation by the Kinetic Simulation Algorithm Ontology (KiSAO):</p><p>To reproduce the simulations run published by the authors, the model has to be simulated with any of two different approaches. First, one could use a deterministic method (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000035" title="Access to: KISAO_0000035">KISAO_0000035</a>
            ) with continuous variables (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000018" title="Access to: KISAO_0000018">KISAO_0000018</a>
            ). One sample algorithm to use is the CVODE solver (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000019" title="Access to: KISAO_0000019">KISAO_0000019</a>
            ). Second, one could simulate the system using Gillespie&apos;s direct method (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000029" title="Access to: KISAO_0000029">KISAO_0000029</a>
            ), which is a stochastic method (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000036" title="Access to: KISAO_0000036">KISAO_0000036</a>
            ) supporting adaptive timesteps (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000041" title="Access to: KISAO_0000041">KISAO_0000041</a>
            ) and using discrete variables (        <a href="http://identifiers.org/biomodels.kisao/KISAO_0000016" title="Access to: KISAO_0000016">KISAO_0000016</a>
            ).        </p>
</div><div class="dc:publisher">
  <p>This model is hosted on        <a href="http://www.ebi.ac.uk/biomodels/">BioModels Database</a>
            and identified by:        <a href="http://identifiers.org/biomodels.db/BIOMD0000000012">BIOMD0000000012</a>
            .        </p><p>To cite BioModels Database, please use:        <a href="http://identifiers.org/pubmed/20587024" title="Latest BioModels Database publication">BioModels Database: An enhanced, curated and annotated resource for published quantitative kinetic models</a>
            .        </p>
</div><div class="dc:license">
  <p>To the extent possible under law, all copyright and related or neighbouring rights to this encoded model have been dedicated to the public domain worldwide. Please refer to        <a href="http://creativecommons.org/publicdomain/zero/1.0/" title="Access to: CC0 1.0 Universal (CC0 1.0), Public Domain Dedication">CC0 Public Domain Dedication</a>
            for more information.        </p>
</div>
</body>
</notes>"

PREDICTOR
t	 T	 "n/a"	 time	 0	 1000	

COMPARTMENTS
cell	 V	 "n/a"	 vol.	 1

STATES
PX	 C	 "n/a"	 conc.	 cell	 1	 "LacI protein"
PY	 C	 "n/a"	 conc.	 cell	 1	 "TetR protein"
PZ	 C	 "n/a"	 conc.	 cell	 1	 "cI protein"
X_state	 C	 "n/a"	 conc.	 cell	 1	 "LacI mRNA"
Y_state	 C	 "n/a"	 conc.	 cell	 1	 "TetR mRNA"
Z_state	 C	 "n/a"	 conc.	 cell	 1	 "cI mRNA"

INPUTS

REACTIONS
X_state 	->  	 CUSTOM "(X_state*log(2))/tau_mRNA" 	"degradation of LacI transcripts"
Y_state 	->  	 CUSTOM "(Y_state*log(2))/tau_mRNA" 	"degradation of TetR transcripts"
Z_state 	->  	 CUSTOM "(Z_state*log(2))/tau_mRNA" 	"degradation of CI transcripts"
 	-> PX 	 CUSTOM "(X_state*eff*log(2))/tau_mRNA" 	"translation of LacI"
 	-> PY 	 CUSTOM "(Y_state*eff*log(2))/tau_mRNA" 	"translation of TetR"
 	-> PZ 	 CUSTOM "(Z_state*eff*log(2))/tau_mRNA" 	"translation of CI"
PX 	->  	 CUSTOM "(PX*log(2))/tau_prot" 	"degradation of LacI"
PY 	->  	 CUSTOM "(PY*log(2))/tau_prot" 	"degradation of TetR"
PZ 	->  	 CUSTOM "(PZ*log(2))/tau_prot" 	"degradation of CI"
 	-> X_state 	 CUSTOM "60*ps_0 - (KM^n_parameter*(60*ps_0 - 60*ps_a))/(KM^n_parameter + PZ^n_parameter)" 	"transcription of LacI"
 	-> Y_state 	 CUSTOM "60*ps_0 - (KM^n_parameter*(60*ps_0 - 60*ps_a))/(KM^n_parameter + PX^n_parameter)" 	"transcription of TetR"
 	-> Z_state 	 CUSTOM "60*ps_0 - (KM^n_parameter*(60*ps_0 - 60*ps_a))/(KM^n_parameter + PY^n_parameter)" 	"transcription of CI"

DERIVED

CONDITIONS

PARAMETERS
init_PX	 0	 1	 0	 0	 1000
init_PY	 0	 1	 0	 0	 1000
init_PZ	 0	 1	 0	 0	 1000
init_X_state	 0	 1	 0	 0	 1000
init_Y_state	 20	 1	 0	 0	 1000
init_Z_state	 0	 1	 0	 0	 1000
eff	 20	 0	 0	 0	 1000
n_parameter	 2	 0	 0	 0	 1000
KM	 40	 0	 0	 0	 1000
tau_mRNA	 2	 0	 0	 0	 1000
tau_prot	 10	 0	 0	 0	 1000
ps_a	 0.5	 0	 0	 0	 1000
ps_0	 0.0005	 0	 0	 0	 1000
